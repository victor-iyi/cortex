name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: Gr1N/setup-poetry@v7
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies with poetry
        run: poetry install --with dev

      - name: Python Code Style, Quality and Lint
        uses: weibullguy/python-lint-plus@master
        with:
          python-root-list: "src"
          use-docformatter: true
          use-autopep8: true
          use-pydocstyle: true
          use-mypy: true
          use-flake8: true
          # Unused linters.
          use-black: false
          use-yapf: false
          use-isort: false
          use-pycodestyle: false
          use-pylint: false
          use-mccabe: false
          use-radon: false
          use-rstcheck: false
          use-check-manifest: false
          use-pyroma: false
          # extra-autopep8-options: "--diff --recursive --aggressive"
          # extra-docformatter-options: "--check"

      # - name: Lint with flake8
      #   run: |
      #     # exit-zero treats all errors as warnings.
      #     poetry run flake8 src --exit-zero --statistics
      #   continue-on-error: true
      #
      # - name: Static type check with mypy
      #   run: |
      #     poetry run mypy src

      # - name: Test with pytest
      #   run: |
      #     poetry run pytest tests -v
      #
      # - name: Run tox
      #   # Run tox using the version of Python in `PATH`.
      #   run: poetry run tox -e py
